<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Luucio's blog]]></title>
  <subtitle><![CDATA[Constant dropping wears the stone]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://xiao.luucio.com/"/>
  <updated>2016-06-17T03:12:41.000Z</updated>
  <id>http://xiao.luucio.com/</id>
  
  <author>
    <name><![CDATA[Luucio]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Google Play warning(You are using a vulnerable version of libpng)]]></title>
    <link href="http://xiao.luucio.com/2016/06/17/Google-Play-warnings/"/>
    <id>http://xiao.luucio.com/2016/06/17/Google-Play-warnings/</id>
    <published>2016-06-17T02:55:22.000Z</published>
    <updated>2016-06-17T03:12:41.000Z</updated>
    <content type="html"><![CDATA[<p>今天收到Google Play的一个邮件,提示我很早上线的一个游戏的libpng版本太低，会有一定的敏感问题，后续升级若使用低版本的libpng库的app都会被打回。</p>
<blockquote>
<p>Hello Google Play Developer,<br>We detected that your app(s) listed at the end of this email are using an unsafe version of the libpng library. Apps with vulnerabilities like this can expose users to risk of compromise and may be considered in violation of our Malicious Behavior policy.<br>What’s happening<br>Beginning September 17, 2016, Google Play will block publishing of any new apps or updates that use vulnerable versions of libpng. Your published APK version will not be affected, however any updates to the app will be blocked unless you address this vulnerability.<br>Action required: Migrate your app(s) to use libpng v1.0.66, v.1.2.56, v.1.4.19, v1.5.26 or higher as soon as possible and increment the version number of the upgraded APK.<br>Next steps<br>Download the latest version of libpng from the libpng website.<br>Sign in to your Developer Console and submit the updated version of your app.<br>Check back after five hours - we’ll show a warning message if the app hasn’t been updated correctly.<br>The vulnerability stems from an out of bounds memory access that could potentially lead to code execution. Versions 1.0.x before 1.0.66, 1.1.x and 1.2.x before 1.2.56, 1.3.x and 1.4.x before 1.4.19, and 1.5.x before 1.5.26 are affected.<br>You can read more about the vulnerability in CVE-2015-8540. For other technical questions about the vulnerability, you can post to Stack Overflow and use the tag “android-security.”<br>While these specific issues may not affect every app that uses libpng, it’s best to stay up to date on all security patches.<br>We’re here to help<br>If you feel we have sent this warning in error, you can contact our developer support team.<br>Regards,<br>The Google Play Team</p>
</blockquote>
<p>由于收到警告的这个老项目用的是cocos2d-x 2.2.6, libpng的版本是1.2.46, 见png.h:<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">define</span> PNG_LIBPNG_VER <span class="number">10246</span> <span class="comment">/* 1.2.46 */</span></span></span><br></pre></td></tr></table></figure></p>
<p>我看了下新项目的cocos2d-x 3.10的，是1.6.16，满足Google Play的要求，直接拿过来用，路径：/Users/lux/git/MetaFun_projects/cocos2d-x-2.2.6/cocos2dx/platform/third_party/android/prebuilt/libpng</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">define</span> PNG_LIBPNG_VER_STRING <span class="string">"1.6.16"</span></span></span><br></pre></td></tr></table></figure>
<p>编译过程中报错：<br>/Users/lux/git/MetaFun_projects/cocos2d-x-2.2.6/projects/ColorRun/proj.android/../../../cocos2dx/platform/third_party/android/prebuilt/libpng/libs/armeabi/libpng.a(pngrutil.o):pngrutil.c:function png_inflate_claim: error: undefined reference to ‘inflateReset2’<br>/Users/lux/git/MetaFun_projects/cocos2d-x-2.2.6/projects/ColorRun/proj.android/../../../cocos2dx/platform/third_party/android/prebuilt/libpng/libs/armeabi/libpng.a(pngrutil.o):pngrutil.c:function png_decompress_chunk.constprop.5: error: undefined reference to ‘inflateReset2’<br>collect2: error: ld returned 1 exit status<br>make: <em>*</em> [obj/local/armeabi/libcocos2dcpp.so] Error 1<br>make: Leaving directory `/Users/lux/git/MetaFun_projects/cocos2d-x-2.2.6/projects/ColorRun/proj.android’</p>
<p>查了下inflateReset2，是libz的方法，cocos2d-x 2.2.6用的是ndk里面的libz，和新版本的libpng不兼容，因此直接从cocos2d-x 3.10中拿过来libz（免去自己编译麻烦）</p>
<p>直接放到：./cocos2d-x-2.2.6/cocos2dx/platform/third_party/android/prebuilt/zlib<br>修改mk：./cocos2d-x-2.2.6/cocos2dx/Android.mk<br>增加：LOCAL_WHOLE_STATIC_LIBRARIES += cocos_zlib_static和$(call import-module,zlib)</p>
<p>编译完成，打包apk提交新版本。:)</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>今天收到Google Play的一个邮件,提示我很早上线的一个游戏的libpng版本太低，会有一定的敏感问题，后续升级若使用低版本的libpng库的app都会被打回。</p>
<blockquote>
<p>Hello Google Play Developer,<br>W]]>
    </summary>
    
      <category term="技术" scheme="http://xiao.luucio.com/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[cocos2d-x增加内存使用的显示]]></title>
    <link href="http://xiao.luucio.com/2016/06/16/cocos2d-x-add-memory-show/"/>
    <id>http://xiao.luucio.com/2016/06/16/cocos2d-x-add-memory-show/</id>
    <published>2016-06-16T03:35:53.000Z</published>
    <updated>2016-06-16T03:39:52.000Z</updated>
    <content type="html"><![CDATA[<p>cocos2d-x 增加使用内存显示, android平台找不到sys/sysctl.h不支持<br>CCDirector.h:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="preprocessor">#<span class="keyword">if</span> (CC_TARGET_PLATFORM != CC_PLATFORM_ANDROID)</span></span><br><span class="line">    <span class="comment">// add show memrory method</span></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">double</span> <span class="title">getAvailableMegaBytes</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">double</span> <span class="title">getActiveMegaBytes</span><span class="params">()</span></span>;</span><br><span class="line"><span class="preprocessor">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure></p>
<p>CCDirector.cpp<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">if</span> (CC_TARGET_PLATFORM != CC_PLATFORM_ANDROID)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;sys/sysctl.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;mach/mach.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;mach/mach_host.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#<span class="keyword">if</span> (CC_TARGET_PLATFORM != CC_PLATFORM_ANDROID)</span></span><br><span class="line"><span class="comment">// add show memrory method</span></span><br><span class="line"><span class="keyword">double</span> Director::getAvailableMegaBytes() &#123;</span><br><span class="line">    <span class="keyword">vm_statistics_data_t</span> vmStats;</span><br><span class="line">    <span class="keyword">mach_msg_type_number_t</span> infoCount = HOST_VM_INFO_COUNT;</span><br><span class="line">    <span class="keyword">kern_return_t</span> kernReturn = host_statistics(mach_host_self(), HOST_VM_INFO, (<span class="keyword">host_info_t</span>)&amp;vmStats, &amp;infoCount);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (kernReturn != KERN_SUCCESS)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0.0f</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (vm_page_size * vmStats.free_count) / <span class="number">1024.0</span> / <span class="number">1024.0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> Director::getActiveMegaBytes() &#123;</span><br><span class="line">    <span class="keyword">struct</span> task_basic_info info;</span><br><span class="line">    <span class="keyword">mach_msg_type_number_t</span> size = <span class="keyword">sizeof</span>(info);</span><br><span class="line">    <span class="keyword">kern_return_t</span> kernReturn = task_info(mach_task_self(), TASK_BASIC_INFO, (<span class="keyword">task_info_t</span>)&amp;info, &amp;size);</span><br><span class="line">    <span class="keyword">if</span>( kernReturn != KERN_SUCCESS ) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0.0f</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> info.resident_size / <span class="number">1024.0</span> / <span class="number">1024.0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="preprocessor">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>cocos2d-x 增加使用内存显示, android平台找不到sys/sysctl.h不支持<br>CCDirector.h:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><spa]]>
    </summary>
    
      <category term="技术" scheme="http://xiao.luucio.com/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[cocos-lua中lua的class理解]]></title>
    <link href="http://xiao.luucio.com/2016/06/07/cocos-lua-learn-lua-class/"/>
    <id>http://xiao.luucio.com/2016/06/07/cocos-lua-learn-lua-class/</id>
    <published>2016-06-07T13:31:29.000Z</published>
    <updated>2016-06-16T03:39:42.000Z</updated>
    <content type="html"><![CDATA[<figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">local</span> child = class(className, cc.Node)</span><br><span class="line"><span class="keyword">local</span> obj = child:create()</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">child:func1</span><span class="params">()</span></span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<p>1.obj是一个userdata<br>2.obj.a=1, a的值是存储在tolua.getpeer(obj)中的，可以用rawget(tolua.getpeer(obj), “a”)获取到<br>3.cc.Node是一个table，cc和cc.xx都是table<br>4.Node的方法都是存储在getmetatable(cc.Node)中的，可以用rawget(getmetatable(cc.Node), “setName”)获取到<br>5.getmetatable(obj) == getmetatable(cc.Node)<br>    getmetatable(obj).<strong>index == getmetatable(cc.Node).</strong>index，且都是function<br>6.getmetatable(tolua.getpeer(obj)).__index == child, 且都是table，func1就是其中的值</p>
]]></content>
    <summary type="html">
    <![CDATA[<figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="]]>
    </summary>
    
      <category term="技术" scheme="http://xiao.luucio.com/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[cocos-lua 模块裁剪]]></title>
    <link href="http://xiao.luucio.com/2016/05/10/cocos-lua-package-reduce/"/>
    <id>http://xiao.luucio.com/2016/05/10/cocos-lua-package-reduce/</id>
    <published>2016-05-10T08:37:22.000Z</published>
    <updated>2016-06-16T03:38:05.000Z</updated>
    <content type="html"><![CDATA[<h2 id="u53BB_u6389_u4E0D_u7528_u7684luabinding"><a href="#u53BB_u6389_u4E0D_u7528_u7684luabinding" class="headerlink" title="去掉不用的luabinding"></a>去掉不用的luabinding</h2><ul>
<li><p>../cocos2d-x/cocos/scripting/lua-bindings/manual/lua_module_register.cpp</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lua_module_register</span><span class="params">(lua_State* L)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="comment">//Dont' change the module register order unless you know what your are doing</span></span><br><span class="line">    register_cocosdenshion_module(L);</span><br><span class="line"><span class="comment">//    register_network_module(L);</span></span><br><span class="line"><span class="comment">//    register_cocosbuilder_module(L);</span></span><br><span class="line">    register_cocostudio_module(L);</span><br><span class="line">    register_ui_moudle(L);</span><br><span class="line"><span class="comment">//    register_extension_module(L);</span></span><br><span class="line">    register_spine_module(L);</span><br><span class="line"><span class="comment">//    register_cocos3d_module(L);</span></span><br><span class="line"><span class="comment">//    register_audioengine_module(L);</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">if</span> CC_USE_3D_PHYSICS &amp;&amp; CC_ENABLE_BULLET_INTEGRATION</span></span><br><span class="line"><span class="comment">//    register_physics3d_module(L);</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">endif</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">if</span> CC_USE_NAVMESH</span></span><br><span class="line"><span class="comment">//    register_navmesh_module(L);</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">endif</span></span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>../cocos2d-x/cocos/scripting/lua-bindings/manual/CCLuaStack.cpp</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">if</span> CC_USE_PHYSICS</span></span><br><span class="line"><span class="comment">//    register_all_cocos2dx_physics(_state);</span></span><br><span class="line"><span class="comment">//    register_all_cocos2dx_physics_manual(_state);</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="u79FB_u9664_u4E0D_u7528_u7684_u5E93"><a href="#u79FB_u9664_u4E0D_u7528_u7684_u5E93" class="headerlink" title="移除不用的库"></a>移除不用的库</h2><p>通过adt的打包日志，分析有哪些库被编译进最终的so文件中，然后去项目内一个一个搜索这些库的名称。找到其对应的Android.mk文件，然后尝试移除掉无用库文件(比如：物理引擎，3d模块，CocosBuilder spine等等)，然后尝试编译，确保游戏能正确运行。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="u53BB_u6389_u4E0D_u7528_u7684luabinding"><a href="#u53BB_u6389_u4E0D_u7528_u7684luabinding" class="headerlink" title="去掉不用的luabindin]]>
    </summary>
    
      <category term="技术" scheme="http://xiao.luucio.com/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[luasocket在cocos2d-x中的使用]]></title>
    <link href="http://xiao.luucio.com/2016/01/05/luasocket/"/>
    <id>http://xiao.luucio.com/2016/01/05/luasocket/</id>
    <published>2016-01-05T03:17:25.000Z</published>
    <updated>2016-01-05T10:08:51.000Z</updated>
    <content type="html"><![CDATA[<p>今天没事想测试下在coco2d-x lua中luasocket，虽然cocos里面的luabinding中已经集成了luasocket，但简单的使用竟然还报错，于是便要一探究竟，把过程记录下来。<br>简单的使用：<br><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">require</span>(<span class="string">"socket.core"</span>)</span><br></pre></td></tr></table></figure></p>
<p>报错信息:<br><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[LUA-<span class="built_in">print</span>] [<span class="built_in">string</span> <span class="string">"app/world/testSocket.lua"</span>]:<span class="number">7</span>: loop <span class="keyword">or</span> previous <span class="built_in">error</span> loading <span class="built_in">module</span> <span class="string">'socket.core'</span></span><br><span class="line">stack traceback:</span><br><span class="line">	[<span class="built_in">string</span> <span class="string">"app/world/testSocket.lua"</span>]:<span class="number">7</span>: <span class="keyword">in</span> <span class="function"><span class="keyword">function</span> '<span class="title">doTest</span>'</span><br><span class="line">    ...</span></span><br></pre></td></tr></table></figure></p>
<p>解决问题最好的方式便是查看cocos的源码了，发现cocos把luasocket都preload过了,在package.preload中。<br>lua_extensions.c:<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> luaL_Reg luax_exts[] = &#123;</span><br><span class="line">    &#123;<span class="string">"socket.core"</span>, luaopen_socket_core&#125;,</span><br><span class="line">    &#123;<span class="string">"mime.core"</span>, luaopen_mime_core&#125;,</span><br><span class="line">    &#123;<span class="literal">NULL</span>, <span class="literal">NULL</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">luaopen_lua_extensions</span><span class="params">(lua_State *L)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="comment">// load extensions</span></span><br><span class="line">    luaL_Reg* lib = luax_exts;</span><br><span class="line">    lua_getglobal(L, <span class="string">"package"</span>);</span><br><span class="line">    lua_getfield(L, -<span class="number">1</span>, <span class="string">"preload"</span>);</span><br><span class="line">    <span class="keyword">for</span> (; lib-&gt;func; lib++)</span><br><span class="line">    &#123;</span><br><span class="line">        lua_pushcfunction(L, lib-&gt;func);</span><br><span class="line">        lua_setfield(L, -<span class="number">2</span>, lib-&gt;name);</span><br><span class="line">    &#125;</span><br><span class="line">    lua_pop(L, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    luaopen_luasocket_scripts(L);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> luaL_Reg luasocket_scripts_modules[] = &#123;</span><br><span class="line">    &#123;<span class="string">"ltn12"</span>, luaopen_lua_m_ltn12&#125;,</span><br><span class="line">    &#123;<span class="string">"mime"</span>, luaopen_lua_m_mime&#125;,</span><br><span class="line">    &#123;<span class="string">"socket.ftp"</span>, luaopen_lua_m_socket_ftp&#125;,</span><br><span class="line">    &#123;<span class="string">"socket.headers"</span>, luaopen_lua_m_socket_headers&#125;,</span><br><span class="line">    &#123;<span class="string">"socket.http"</span>, luaopen_lua_m_socket_http&#125;,</span><br><span class="line">    &#123;<span class="string">"socket.mbox"</span>, luaopen_lua_m_socket_mbox&#125;,</span><br><span class="line">    &#123;<span class="string">"socket.smtp"</span>, luaopen_lua_m_socket_smtp&#125;,</span><br><span class="line">    &#123;<span class="string">"socket.tp"</span>, luaopen_lua_m_socket_tp&#125;,</span><br><span class="line">    &#123;<span class="string">"socket.url"</span>, luaopen_lua_m_socket_url&#125;,</span><br><span class="line">    &#123;<span class="string">"socket"</span>, luaopen_lua_m_socket&#125;,</span><br><span class="line">    &#123;<span class="literal">NULL</span>, <span class="literal">NULL</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">luaopen_luasocket_scripts</span><span class="params">(lua_State* L)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    luaL_Reg* lib = luasocket_scripts_modules;</span><br><span class="line">    lua_getglobal(L, <span class="string">"package"</span>);</span><br><span class="line">    lua_getfield(L, -<span class="number">1</span>, <span class="string">"preload"</span>);</span><br><span class="line">    <span class="keyword">for</span> (; lib-&gt;func; lib++)</span><br><span class="line">    &#123;</span><br><span class="line">        lib-&gt;func(L);</span><br><span class="line">        lua_setfield(L, -<span class="number">2</span>, lib-&gt;name);</span><br><span class="line">    &#125;</span><br><span class="line">    lua_pop(L, <span class="number">2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>正常情况下require机制会先去package.preload中去找的啊，不会出错，然而问题没那么简单，cocos给我们留了一个坑:<br>查看config.lua中的:<br><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- disable create unexpected global variable</span></span><br><span class="line">CC_DISABLE_GLOBAL = <span class="keyword">true</span></span><br></pre></td></tr></table></figure></p>
<p>原来cocos对lua中和c-binding中的全局变量做了限制，防止我们误用全局变量，将CC_DISABLE_GLOBAL设置成false就好了，但CC_DISABLE_GLOBAL的功能就失效了。</p>
<p>现在require(“socket”)就没问题了，可以正常使用，但require(“socket.ftp”)还是报错，说是找不到socket.socket。cocos中的luasocket将luasocket的lua库都放在c代码中作为字符记载的，因此我们在luasocket_scripts.c中将lua脚本修改下就好了。如:require(“socket.socket”)修改成require(“socket”)等，放一份我改好的<a href="/download/luasocket_scripts.c">luasocket_scripts.c</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>今天没事想测试下在coco2d-x lua中luasocket，虽然cocos里面的luabinding中已经集成了luasocket，但简单的使用竟然还报错，于是便要一探究竟，把过程记录下来。<br>简单的使用：<br><figure class="highlight l]]>
    </summary>
    
      <category term="技术" scheme="http://xiao.luucio.com/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[cocos2d-x中UIScrollview滑动在ios上的问题]]></title>
    <link href="http://xiao.luucio.com/2015/12/29/some-cocos-issues/"/>
    <id>http://xiao.luucio.com/2015/12/29/some-cocos-issues/</id>
    <published>2015-12-29T03:14:01.000Z</published>
    <updated>2016-01-05T10:06:35.000Z</updated>
    <content type="html"><![CDATA[<p>今天leader拿我之前的项目过来告诉我说，UIScrollview在ios上滑动有时候不流畅，在手指离开UIScrollview之后，有时没有deaccelerating, 我仔细看了下，发现确实存在这个问题。令人感到疑惑的是在android下没这个问题。<br>仔细翻阅了下UIScrollview的源码, 发现一堆hardcode, 经过了这么多版本的迭代，cocos的代码还是那么…。发现疑问在calculateTouchMoveVelocity函数中totalTime的比较，我的是cocos2d-x 3.9：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Vec2 ScrollView::calculateTouchMoveVelocity() <span class="keyword">const</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">float</span> totalTime = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> &amp;timeDelta : _touchMoveTimeDeltas)</span><br><span class="line">    &#123;</span><br><span class="line">        totalTime += timeDelta;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(totalTime == <span class="number">0</span> || totalTime &gt;= <span class="number">0.1f</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> Vec2::ZERO;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Vec2 totalMovement;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> &amp;displacement : _touchMoveDisplacements)</span><br><span class="line">    &#123;</span><br><span class="line">        totalMovement += displacement;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> totalMovement / totalTime;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>当totalTime大于0.1f的时候，就将滑动速度设置为0了，难怪有时候滑动没有减速，将0.1的数值调大如0.2，就完全没这个问题了。</p>
<p>在cocos的github上查了下issues，发现也有这方面问题的<a href="https://github.com/cocos2d/cocos2d-x/issues/14461" target="_blank" rel="external">争论</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>今天leader拿我之前的项目过来告诉我说，UIScrollview在ios上滑动有时候不流畅，在手指离开UIScrollview之后，有时没有deaccelerating, 我仔细看了下，发现确实存在这个问题。令人感到疑惑的是在android下没这个问题。<br>仔细翻阅]]>
    </summary>
    
      <category term="技术" scheme="http://xiao.luucio.com/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[lua文件操作]]></title>
    <link href="http://xiao.luucio.com/2015/12/15/lua-file-handle/"/>
    <id>http://xiao.luucio.com/2015/12/15/lua-file-handle/</id>
    <published>2015-12-15T03:15:09.000Z</published>
    <updated>2016-01-05T10:06:09.000Z</updated>
    <content type="html"><![CDATA[<p>平时需要用lua写点小工具什么的，经常要用到读写文件，主要参考lua的manual。</p>
<p>主要的lua api:<br><a href="http://www.lua.org/manual/5.1/manual.html#pdf-io.open" target="_blank" rel="external">io.open</a></p>
<blockquote>
<p>“r”: read mode (the default);<br>“w”: write mode;<br>“a”: append mode;<br>“r+”: update mode, all previous data is preserved;<br>“w+”: update mode, all previous data is erased;<br>“a+”: append update mode, previous data is preserved, writing is only allowed at the end of file.</p>
</blockquote>
<p><a href="http://www.lua.org/manual/5.1/manual.html#pdf-file:read" target="_blank" rel="external">file:read</a></p>
<blockquote>
<p>“<em>n”: reads a number; this is the only format that returns a number instead of a string.<br>“</em>a”: reads the whole file, starting at the current position. On end of file, it returns the empty string.<br>“*l”: reads the next line (skipping the end of line), returning nil on end of file. This is the default format.<br>number: reads a string with up to this number of characters, returning nil on end of file. If number is zero, it reads nothing and returns an empty string, or nil on end of file.</p>
</blockquote>
<h3 id="u8BFB_u6587_u4EF6"><a href="#u8BFB_u6587_u4EF6" class="headerlink" title="读文件"></a>读文件</h3><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">read_files</span><span class="params">( fileName )</span></span></span><br><span class="line">	<span class="keyword">local</span> f = <span class="built_in">assert</span>(<span class="built_in">io</span>.open(fileName,<span class="string">'r'</span>), <span class="string">"file not exist"</span>)</span><br><span class="line">	<span class="keyword">local</span> content = f:read(<span class="string">"*a"</span>)</span><br><span class="line">	f:close()</span><br><span class="line">	<span class="keyword">return</span> content</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h3 id="u5199_u6587_u4EF6"><a href="#u5199_u6587_u4EF6" class="headerlink" title="写文件"></a>写文件</h3><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">write_content</span><span class="params">( fileName,content )</span></span></span><br><span class="line">	<span class="keyword">local</span>  f = <span class="built_in">assert</span>(<span class="built_in">io</span>.open(fileName,<span class="string">'a'</span>), <span class="string">"open file failed"</span>)</span><br><span class="line">	f:write(content)</span><br><span class="line">	f:close()</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>平时需要用lua写点小工具什么的，经常要用到读写文件，主要参考lua的manual。</p>
<p>主要的lua api:<br><a href="http://www.lua.org/manual/5.1/manual.html#pdf-io.open" target="]]>
    </summary>
    
      <category term="技术" scheme="http://xiao.luucio.com/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello，Blog]]></title>
    <link href="http://xiao.luucio.com/2015/12/09/Hello-Blog/"/>
    <id>http://xiao.luucio.com/2015/12/09/Hello-Blog/</id>
    <published>2015-12-09T06:23:08.000Z</published>
    <updated>2015-12-10T07:33:00.000Z</updated>
    <content type="html"><![CDATA[<p>从<a href="https://www.digitalocean.com" target="_blank" rel="external">do</a>到<a href="https://www.ramnode.com" target="_blank" rel="external">ramnode</a>再到<a href="https://www.conoha.jp/" target="_blank" rel="external">conoha</a>，从<a href="https://wordpress.org/" target="_blank" rel="external">wp</a>到<a href="https://ghost.org/" target="_blank" rel="external">ghost</a>再到<a href="https://hexo.io/" target="_blank" rel="external">hexo</a>，我的博客又开通了(好吧，我承认是折腾🐶)。由于ssh到我之前<a href="https://www.ramnode.com" target="_blank" rel="external">ramnode</a>的vps实在太慢，而且blog经常要十几秒才能打开，简直要了亲命，之前陆陆续续写的几篇blog也不打算备份再转过来了，直接放弃，转向了<a href="https://www.conoha.jp/" target="_blank" rel="external">conoha</a>，博客也换成了<a href="https://hexo.io/" target="_blank" rel="external">hexo</a>，到目前感觉还是不错的(油管1080p带我飞)，经过这段折腾，也稍微总结一点体会吧。</p>
<ol>
<li><p><strong>有个自己的服务器是必须的。</strong>作为一个程序猿，平时喜欢捣鼓捣鼓，有些程序什么的都可以放在上面跑。身处天朝，有个稳定的梯子是必不可少的，ssh -D或ss大家都懂得</p>
</li>
<li><p><strong>便宜没好货。</strong>最开始用的<a href="https://www.digitalocean.com" target="_blank" rel="external">do</a>刚开始几个月还可以，后来<a href="https://www.digitalocean.com" target="_blank" rel="external">do</a>的dashboard都被墙了，网页经常刷不全，进dashboard管理下vps都干不了，网络也经常抽经，每当google查个东西半天刷不出来的时候简直没法玩。<a href="https://www.ramnode.com" target="_blank" rel="external">ramnode</a>就不说了，虽然1个Quarter才三十四块钱，blog经常访问不了也是白搭</p>
</li>
<li><p><strong>简约至上。</strong>在探索人生真谛的道路上，为了避免捡了芝麻丢了西瓜这种low的问题，就是找个地方记下来。最初用lamp搭建的wp感觉还是太臃肿了，毕竟我只是需求一个写写日志的地方，对markdown也没有那么好的支持(虽然我也是才学)。尝试了ghost,感觉也还行，但现在的静态博客太火了，作为一个折腾…，好吧，又一次跟疯了</p>
<p> 2012年12月9日，我的新blog在和世界say Hello!!</p>
</li>
</ol>
<p>好了，第一次就少写点，以免扯到dan， 希望还有下一篇-:)</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>从<a href="https://www.digitalocean.com" target="_blank" rel="external">do</a>到<a href="https://www.ramnode.com" target="_blank" rel="exte]]>
    </summary>
    
      <category term="随笔" scheme="http://xiao.luucio.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
</feed>
